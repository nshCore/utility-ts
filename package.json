{
  "name": "@nshcore-npm/ts-oss-boiler",
  "version": "0.0.0-development",
  "description": "Typescript open source software project boilerplate, configured with eslint and semantic releasing.",
  "author": "nshcore@protonmail.com",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nshcore/ts-oss-boiler.git"
  },
  "homepage": "https://github.com/nshcore/ts-oss-boiler#readme",
  "bugs": {
    "url": "https://github.com/nshcore/ts-oss-boiler/issues"
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/",
    "tag": "latest"
  },
  "cdn": "dist/index.umd.js",
  "main": "dist/index.js",
  "types": "types/index.d.ts",
  "unpkg": "dist/index.umd.js",
  "module": "dist/index.esm.js",
  "jsdelivr": "dist/index.umd.js",
  "umd:main": "dist/index.umd.js",
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "release": {
    "branches": [
      "master",
      "next"
    ]
  },
  "engines": {
    "node": ">=10.23.1",
    "npm": "^6.13.4"
  },
  "scripts": {
    "semantic-release": "semantic-release",
    "prebuild": "rimraf dist",
    "doc": "npx typedoc src/index.ts",
    "build:amd": "bili --format amd",
    "build:amd-min": "bili --format amd-min",
    "build:cjs": "bili --format cjs",
    "build:cjs-min": "bili --format cjs-min",
    "build:system": "bili --format system",
    "build:system-min": "bili --format system-min",
    "build:es": "bili --format es",
    "build:es-min": "bili --format es-min",
    "build:esm": "bili --format esm",
    "build:esm-min": "bili --format esm-min",
    "build:iife": "bili --format iife",
    "build:iife-min": "bili --format iife-min",
    "build:umd": "bili --format umd",
    "build:umd-min": "bili --format umd-min",
    "prepublishOnly": "npm run doc && npm run build:es-min && npm run test:unit",
    "lint": "eslint '{src,apps,libs,test}/**/*.ts'",
    "lint:fix": "eslint '{src,apps,libs,test}/**/*.ts' --fix",
    "test:unit": "cross-env NODE_ENV=test jest --testTimeout=60000 --runInBand --detectOpenHandles --forceExit",
    "test:watch": "cross-env NODE_ENV=test jest --watch --runInBand --detectOpenHandles",
    "test:cov": "cross-env NODE_ENV=test jest --coverage --runInBand --detectOpenHandles",
    "test:debug": "cross-env NODE_ENV=test node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "depcheck": "depcheck"
  },
  "devDependencies": {
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-angular": "^11.0.0",
    "@commitlint/prompt": "^11.0.0",
    "@commitlint/prompt-cli": "^11.0.0",
    "@nshcore-npm/eslint-config-nshcore": "^0.0.9",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/commit-analyzer": "^8.0.1",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/github": "^7.2.0",
    "@semantic-release/npm": "^7.0.9",
    "@semantic-release/release-notes-generator": "^9.0.1",
    "@types/faker": "^5.1.5",
    "@types/jest": "^26.0.20",
    "@types/node": "^14.14.20",
    "acorn": "^8.0.4",
    "acorn-dynamic-import": "^4.0.0",
    "bili": "^5.0.5",
    "commitizen": "^4.2.2",
    "cracks": "^3.1.2",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^3.3.0",
    "depcheck": "^1.3.1",
    "eslint": "^7.17.0",
    "faker": "^5.1.0",
    "husky": "^4.3.7",
    "jest": "^26.6.3",
    "jest-extended": "^0.11.5",
    "lint-staged": "^10.5.3",
    "prettier": "^2.2.1",
    "rimraf": "^3.0.2",
    "rollup-plugin-typescript2": "^0.29.0",
    "semantic-release": "^17.3.1",
    "semantic-release-npm-github-publish": "^1.4.0",
    "supertest": "^6.0.1",
    "ts-jest": "^26.4.4",
    "ts-loader": "^8.0.14",
    "ts-node": "^9.1.1",
    "tsconfig-paths": "^3.9.0",
    "typedoc": "^0.20.14",
    "typescript": "^4.1.3"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -c .commitlintrc.json -E HUSKY_GIT_PARAMS",
      "pre-push": "npm run test:cov"
    }
  },
  "lint-staged": {
    "{libs,test}/**/*.ts": [
      "eslint --cache --fix",
      "prettier --ignore-path ./.prettierignore --write"
    ]
  },
  "jest": {
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "setupFilesAfterEnv": [
      "jest-extended"
    ],
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "!**/*.mock.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src/"
    ]
  }
}
